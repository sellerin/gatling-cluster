apiVersion: batch/v1
kind: Job
metadata:
  name: batch-job
spec:
  completions: 2
  parallelism: 2
  activeDeadlineSeconds: 400
  template:
    spec:
      volumes:
      - name: nfs
        persistentVolumeClaim:
          claimName: nfs
      containers:
      - name: main
        image: eu.gcr.io/iron-inkwell-205415/perf:1.0.0-SNAPSHOT
        volumeMounts:
            - name: nfs
              mountPath: /gatling-charts-highcharts-bundle-3.0.2/results
      restartPolicy: Never
  backoffLimit: 1
---  
apiVersion: v1
kind: Pod
metadata:
  name: batch-watcher
spec:
  volumes:
      - name: nfs
        persistentVolumeClaim:
          claimName: nfs
  containers:
  - image: cfmanteiga/alpine-bash-curl-jq
    name: watcher
    command: ["sleep", "9999999"]
#          command:
#          - sh
#          - -c
#          - 'while true; do echo "Waiting for batch to finish..."; wget http://fortune -q -T 1 -O /dev/null >/dev/null 2>/dev/null && break; sleep 1; done; echo "Service is up! Starting main container."'
    volumeMounts:
        - name: nfs
          mountPath: /gatling/results
    
#init container
#rm -rf gatling/results/*


#desactiver rbac et donner tous les droits a tous les services
#kubectl create clusterrolebinding permissive-binding --clusterrole=cluster-admin --group=system:serviceaccounts
#export CURL_CA_BUNDLE=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)

#retourne le nombre de job a attendre
#curl -H "Authorization: Bearer $TOKEN"  -s https://kubernetes/apis/batch/v1/namespaces/default/jobs/batch-job/status | jq '.spec.completions'
#retourne 2 ou null
#curl -H "Authorization: Bearer $TOKEN" -s https://kubernetes/apis/batch/v1/namespaces/default/jobs/batch-job/status | jq '.status.failed'
#retourne 2 ou null
#curl -H "Authorization: Bearer $TOKEN" -s https://kubernetes/apis/batch/v1/namespaces/default/jobs/batch-job/status | jq '.status.active'
#retourne 2 ou null
#curl -H "Authorization: Bearer $TOKEN" -s https://kubernetes/apis/batch/v1/namespaces/default/jobs/batch-job/status | jq '.status.succeeded'
